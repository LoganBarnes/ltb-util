
.. _program_listing_file_include_ltb_util_variant_utils.hpp:

Program Listing for File variant_utils.hpp
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_ltb_util_variant_utils.hpp>` (``include/ltb/util/variant_utils.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // ///////////////////////////////////////////////////////////////////////////////////////
   // Copyright (c) 2021 Logan Barnes - All Rights Reserved
   // ///////////////////////////////////////////////////////////////////////////////////////
   #pragma once
   
   // standard
   #include <variant>
   
   namespace ltb::util {
   
   template <typename Visitor, typename... Ts>
   constexpr auto visit(Visitor&& visitor, std::variant<Ts...>& variants) {
       return std::visit(std::forward<Visitor>(visitor), variants);
   }
   
   template <typename Visitor, typename... Ts>
   constexpr auto visit(Visitor&& visitor, std::variant<Ts...> const& variants) {
       return std::visit(std::forward<Visitor>(visitor), variants);
   }
   
   template <class... Ts>
   struct Visitor : Ts... {
       using Ts::operator()...;
   };
   
   template <class... Ts>
   Visitor(Ts...) -> Visitor<Ts...>;
   
   } // namespace ltb::util
